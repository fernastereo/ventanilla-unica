version: '3'

services:
  #nginx
  ventanilla-unica-api:
    image: nginx:latest
    container_name: api
    ports:
      - "5000:80"
    volumes:
      - ./ventanilla-unica-api:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - postgres
    networks:
      - laravel
  # php
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - ./ventanilla-unica-api:/var/www/html
    user: 1000:1000
    networks:
      - laravel
  # composer
  composer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: composer
    volumes:
      - ./ventanilla-unica-api:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['composer']
    networks:
      - laravel
  #artisan
  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan
    volumes:
      - ./ventanilla-unica-api:/var/www/html
    depends_on:
      - postgres
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
  #postgres
  postgres:
    image: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql@16/data
    environment:
      POSTGRES_USER: laravel_user
      POSTGRES_PASSWORD: bajbciu2dbwc
      POSTGRES_DB: laravel
    networks:
      - laravel
  #pgadmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@ventanilla.com"
      PGADMIN_DEFAULT_PASSWORD: "secret"
    depends_on:
      - postgres
    networks:
      - laravel
    #npm
  npm:
    image: node:latest
    container_name: npm
    volumes:
      - ./ventanilla-unica-api:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel
  # mailhog:
  #   image: mailhog/mailhog:latest
  #   container_name: mailhog
  #   ports:
  #     - "1025:1025"
  #     - "5015:8025"
  #   networks:
  #     - laravel
networks:
  laravel:
volumes:
  postgres_data:
# docker-compose up -d --build
# docker-compose run --rm artisan [COMMAND]
# docker-compose run --rm composer [COMMAND] (create-project laravel/laravel .)
# docker-compose run --rm npm [COMMAND] (npm install / npm run dev)
# docker exec -it php sh
